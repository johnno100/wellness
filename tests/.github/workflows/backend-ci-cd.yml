name: Backend CI/CD Pipeline with TestContainers

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'src/**'
      - 'tests/**'
      - 'package.json'
      - 'package-lock.json'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'src/**'
      - 'tests/**'
      - 'package.json'
      - 'package-lock.json'

jobs:
  test:
    name: Run Backend Tests
    runs-on: ubuntu-latest
    
    services:
      # TestContainers Cloud service
      testcontainers-cloud:
        image: testcontainers/testcontainers-cloud-agent:latest
        env:
          TC_CLOUD_TOKEN: ${{ secrets.TC_CLOUD_TOKEN }}
        ports:
          - 8080:8080
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run ESLint
        run: npm run lint
      
      - name: Run unit tests
        run: npm run test:unit
      
      - name: Run integration tests
        run: npm run test:integration
      
      - name: Upload test coverage
        uses: codecov/codecov-action@v3
        with:
          directory: coverage
          flags: backend
  
  build:
    name: Build Backend
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build application
        run: npm run build
      
      - name: Create Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: false
          tags: wellness-backend:${{ github.sha }}
          file: Dockerfile
      
      - name: Save Docker image
        run: docker save wellness-backend:${{ github.sha }} > wellness-backend.tar
      
      - name: Upload Docker image
        uses: actions/upload-artifact@v3
        with:
          name: wellness-backend-image
          path: wellness-backend.tar
  
  deploy-staging:
    name: Deploy to Staging
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
    
    steps:
      - name: Download Docker image
        uses: actions/download-artifact@v3
        with:
          name: wellness-backend-image
          path: .
      
      - name: Load Docker image
        run: docker load < wellness-backend.tar
      
      - name: Login to Docker Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Tag and push Docker image
        run: |
          docker tag wellness-backend:${{ github.sha }} ${{ secrets.DOCKER_REGISTRY }}/wellness-backend:staging
          docker push ${{ secrets.DOCKER_REGISTRY }}/wellness-backend:staging
      
      - name: Deploy to Staging
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.STAGING_HOST }}
          username: ${{ secrets.STAGING_USERNAME }}
          key: ${{ secrets.STAGING_SSH_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_REGISTRY }}/wellness-backend:staging
            docker-compose -f docker-compose.staging.yml up -d
  
  deploy-production:
    name: Deploy to Production
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Download Docker image
        uses: actions/download-artifact@v3
        with:
          name: wellness-backend-image
          path: .
      
      - name: Load Docker image
        run: docker load < wellness-backend.tar
      
      - name: Login to Docker Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Tag and push Docker image
        run: |
          docker tag wellness-backend:${{ github.sha }} ${{ secrets.DOCKER_REGISTRY }}/wellness-backend:production
          docker push ${{ secrets.DOCKER_REGISTRY }}/wellness-backend:production
      
      - name: Deploy to Production
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PRODUCTION_HOST }}
          username: ${{ secrets.PRODUCTION_USERNAME }}
          key: ${{ secrets.PRODUCTION_SSH_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_REGISTRY }}/wellness-backend:production
            docker-compose -f docker-compose.production.yml up -d
