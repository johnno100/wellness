name: Monorepo CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  determine-changes:
    name: Determine Changed Components
    runs-on: ubuntu-latest
    outputs:
      backend: ${{ steps.filter.outputs.backend }}
      mobile: ${{ steps.filter.outputs.mobile }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Check for file changes
        uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            backend:
              - 'src/**'
              - 'tests/**'
              - 'package.json'
              - 'package-lock.json'
              - 'Dockerfile'
              - 'docker-compose*.yml'
            mobile:
              - 'wellness-app/mobile/**'
  
  backend-tests:
    name: Backend Tests
    needs: determine-changes
    if: ${{ needs.determine-changes.outputs.backend == 'true' }}
    uses: ./.github/workflows/backend-ci-cd.yml
  
  mobile-tests:
    name: Mobile Tests
    needs: determine-changes
    if: ${{ needs.determine-changes.outputs.mobile == 'true' }}
    uses: ./.github/workflows/mobile-ci-cd.yml
  
  deploy-all:
    name: Deploy All Components
    needs: [backend-tests, mobile-tests]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Deploy to environment
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            npm run deploy:production
          else
            npm run deploy:staging
          fi
        env:
          DOCKER_REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          STAGING_HOST: ${{ secrets.STAGING_HOST }}
          STAGING_USERNAME: ${{ secrets.STAGING_USERNAME }}
          STAGING_SSH_KEY: ${{ secrets.STAGING_SSH_KEY }}
          PRODUCTION_HOST: ${{ secrets.PRODUCTION_HOST }}
          PRODUCTION_USERNAME: ${{ secrets.PRODUCTION_USERNAME }}
          PRODUCTION_SSH_KEY: ${{ secrets.PRODUCTION_SSH_KEY }}
          FIREBASE_APP_ID_ANDROID: ${{ secrets.FIREBASE_APP_ID_ANDROID }}
          FIREBASE_SERVICE_ACCOUNT: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
          PLAY_STORE_SERVICE_ACCOUNT_JSON: ${{ secrets.PLAY_STORE_SERVICE_ACCOUNT_JSON }}
