name: Mobile CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'wellness-app/mobile/**'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'wellness-app/mobile/**'

jobs:
  test:
    name: Run Mobile Tests
    runs-on: ubuntu-latest
    
    services:
      # TestContainers Cloud service
      testcontainers-cloud:
        image: testcontainers/testcontainers-cloud-agent:latest
        env:
          TC_CLOUD_TOKEN: ${{ secrets.TC_CLOUD_TOKEN }}
        ports:
          - 8080:8080
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: wellness-app/mobile/package-lock.json
      
      - name: Install dependencies
        working-directory: wellness-app/mobile
        run: npm ci
      
      - name: Run ESLint
        working-directory: wellness-app/mobile
        run: npm run lint
      
      - name: Run unit tests
        working-directory: wellness-app/mobile
        run: npm run test:unit
      
      - name: Run integration tests
        working-directory: wellness-app/mobile
        run: npm run test:integration
      
      - name: Upload test coverage
        uses: codecov/codecov-action@v3
        with:
          directory: wellness-app/mobile/coverage
          flags: mobile
  
  build-android:
    name: Build Android App
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: wellness-app/mobile/package-lock.json
      
      - name: Install dependencies
        working-directory: wellness-app/mobile
        run: npm ci
      
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      
      - name: Build Android app
        working-directory: wellness-app/mobile
        run: |
          cd android
          ./gradlew assembleRelease
      
      - name: Upload Android build
        uses: actions/upload-artifact@v3
        with:
          name: android-release
          path: wellness-app/mobile/android/app/build/outputs/apk/release/app-release.apk
  
  build-ios:
    name: Build iOS App
    needs: test
    runs-on: macos-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: wellness-app/mobile/package-lock.json
      
      - name: Install dependencies
        working-directory: wellness-app/mobile
        run: npm ci
      
      - name: Install CocoaPods
        working-directory: wellness-app/mobile/ios
        run: pod install
      
      - name: Build iOS app
        working-directory: wellness-app/mobile
        run: |
          cd ios
          xcodebuild -workspace WellnessApp.xcworkspace -scheme WellnessApp -configuration Release -sdk iphoneos -archivePath WellnessApp.xcarchive archive
      
      - name: Upload iOS build
        uses: actions/upload-artifact@v3
        with:
          name: ios-release
          path: wellness-app/mobile/ios/WellnessApp.xcarchive
  
  e2e-tests:
    name: Run E2E Tests
    needs: [build-android]
    runs-on: macos-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: wellness-app/mobile/package-lock.json
      
      - name: Install dependencies
        working-directory: wellness-app/mobile
        run: npm ci
      
      - name: Install Detox CLI
        run: npm install -g detox-cli
      
      - name: Install Applesimutils
        run: |
          brew tap wix/brew
          brew install applesimutils
      
      - name: Build for Detox testing
        working-directory: wellness-app/mobile
        run: detox build --configuration ios.sim.release
      
      - name: Run Detox tests
        working-directory: wellness-app/mobile
        run: detox test --configuration ios.sim.release
      
      - name: Upload Detox artifacts
        uses: actions/upload-artifact@v3
        with:
          name: detox-artifacts
          path: wellness-app/mobile/artifacts
  
  deploy-staging:
    name: Deploy to Staging
    needs: [build-android, build-ios, e2e-tests]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
    
    steps:
      - name: Download Android build
        uses: actions/download-artifact@v3
        with:
          name: android-release
          path: android-release
      
      - name: Deploy to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{ secrets.FIREBASE_APP_ID_ANDROID }}
          serviceCredentialsFileContent: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
          groups: testers
          file: android-release/app-release.apk
  
  deploy-production:
    name: Deploy to Production
    needs: [build-android, build-ios, e2e-tests]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Download Android build
        uses: actions/download-artifact@v3
        with:
          name: android-release
          path: android-release
      
      - name: Deploy to Google Play
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.PLAY_STORE_SERVICE_ACCOUNT_JSON }}
          packageName: com.wellness.app
          releaseFiles: android-release/app-release.apk
          track: production
